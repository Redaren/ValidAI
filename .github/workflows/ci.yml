name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '22'

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: validai-app/package-lock.json

      - name: Install dependencies
        working-directory: validai-app
        run: npm ci

      - name: Run ESLint
        working-directory: validai-app
        run: npm run lint

      - name: Run TypeScript check
        working-directory: validai-app
        run: npm run typecheck

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: validai-app/package-lock.json

      - name: Install dependencies
        working-directory: validai-app
        run: npm ci

      - name: Run unit tests
        working-directory: validai-app
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: validai-app/coverage
          fail_ci_if_error: false

  build:
    name: Build Application
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [lint-and-typecheck, unit-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: validai-app/package-lock.json

      - name: Install dependencies
        working-directory: validai-app
        run: npm ci

      - name: Build application
        working-directory: validai-app
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY }}

  # E2E Tests - Prepared for future use
  # Uncomment when E2E tests are ready to be included in CI pipeline
  # e2e-tests:
  #   name: E2E Tests
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   needs: [build]
  #   if: github.event_name == 'push' || github.event.pull_request.draft == false

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: 'npm'
  #         cache-dependency-path: validai-app/package-lock.json

  #     - name: Install dependencies
  #       working-directory: validai-app
  #       run: npm ci

  #     - name: Install Playwright browsers
  #       working-directory: validai-app
  #       run: npx playwright install --with-deps

  #     - name: Run E2E tests
  #       working-directory: validai-app
  #       run: npm run test:e2e
  #       env:
  #         NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  #         NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY }}

  #     - name: Upload Playwright report
  #       uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: playwright-report
  #         path: validai-app/playwright-report/
  #         retention-days: 30

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: validai-app/package-lock.json

      - name: Run security audit
        working-directory: validai-app
        run: npm audit --audit-level=high

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          base-ref: ${{ github.event.pull_request.base.sha }}
          head-ref: ${{ github.event.pull_request.head.sha }}